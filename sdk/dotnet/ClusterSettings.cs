// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Elasticstack
{
    /// <summary>
    /// Updates cluster-wide settings. If the Elasticsearch security features are enabled, you must have the manage cluster privilege to use this API. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html
    /// </summary>
    [ElasticstackResourceType("elasticstack:index/clusterSettings:ClusterSettings")]
    public partial class ClusterSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Elasticsearch connection configuration block.
        /// </summary>
        [Output("elasticsearchConnection")]
        public Output<Outputs.ClusterSettingsElasticsearchConnection?> ElasticsearchConnection { get; private set; } = null!;

        /// <summary>
        /// Settings will apply across restarts.
        /// </summary>
        [Output("persistent")]
        public Output<Outputs.ClusterSettingsPersistent?> Persistent { get; private set; } = null!;

        /// <summary>
        /// Settings do not survive a full cluster restart.
        /// </summary>
        [Output("transient")]
        public Output<Outputs.ClusterSettingsTransient?> Transient { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterSettings(string name, ClusterSettingsArgs? args = null, CustomResourceOptions? options = null)
            : base("elasticstack:index/clusterSettings:ClusterSettings", name, args ?? new ClusterSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterSettings(string name, Input<string> id, ClusterSettingsState? state = null, CustomResourceOptions? options = null)
            : base("elasticstack:index/clusterSettings:ClusterSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/zlepper/pulumi-elasticstack/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterSettings Get(string name, Input<string> id, ClusterSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterSettings(name, id, state, options);
        }
    }

    public sealed class ClusterSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Elasticsearch connection configuration block.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Input<Inputs.ClusterSettingsElasticsearchConnectionArgs>? ElasticsearchConnection { get; set; }

        /// <summary>
        /// Settings will apply across restarts.
        /// </summary>
        [Input("persistent")]
        public Input<Inputs.ClusterSettingsPersistentArgs>? Persistent { get; set; }

        /// <summary>
        /// Settings do not survive a full cluster restart.
        /// </summary>
        [Input("transient")]
        public Input<Inputs.ClusterSettingsTransientArgs>? Transient { get; set; }

        public ClusterSettingsArgs()
        {
        }
        public static new ClusterSettingsArgs Empty => new ClusterSettingsArgs();
    }

    public sealed class ClusterSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Elasticsearch connection configuration block.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Input<Inputs.ClusterSettingsElasticsearchConnectionGetArgs>? ElasticsearchConnection { get; set; }

        /// <summary>
        /// Settings will apply across restarts.
        /// </summary>
        [Input("persistent")]
        public Input<Inputs.ClusterSettingsPersistentGetArgs>? Persistent { get; set; }

        /// <summary>
        /// Settings do not survive a full cluster restart.
        /// </summary>
        [Input("transient")]
        public Input<Inputs.ClusterSettingsTransientGetArgs>? Transient { get; set; }

        public ClusterSettingsState()
        {
        }
        public static new ClusterSettingsState Empty => new ClusterSettingsState();
    }
}
