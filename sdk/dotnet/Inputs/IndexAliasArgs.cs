// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Elasticstack.Inputs
{

    public sealed class IndexAliasArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Query used to limit documents the alias can access.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// Value used to route indexing operations to a specific shard. If specified, this overwrites the `routing` value for indexing operations.
        /// </summary>
        [Input("indexRouting")]
        public Input<string>? IndexRouting { get; set; }

        /// <summary>
        /// If true, the alias is hidden.
        /// </summary>
        [Input("isHidden")]
        public Input<bool>? IsHidden { get; set; }

        /// <summary>
        /// If true, the index is the write index for the alias.
        /// </summary>
        [Input("isWriteIndex")]
        public Input<bool>? IsWriteIndex { get; set; }

        /// <summary>
        /// Index alias name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Value used to route indexing and search operations to a specific shard.
        /// </summary>
        [Input("routing")]
        public Input<string>? Routing { get; set; }

        /// <summary>
        /// Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
        /// </summary>
        [Input("searchRouting")]
        public Input<string>? SearchRouting { get; set; }

        public IndexAliasArgs()
        {
        }
        public static new IndexAliasArgs Empty => new IndexAliasArgs();
    }
}
