// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Elasticstack
{
    public static class GetSnapshotRepository
    {
        /// <summary>
        /// This data source provides the information about the registered snaphosts repositories
        /// </summary>
        public static Task<GetSnapshotRepositoryResult> InvokeAsync(GetSnapshotRepositoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotRepositoryResult>("elasticstack:index/getSnapshotRepository:getSnapshotRepository", args ?? new GetSnapshotRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides the information about the registered snaphosts repositories
        /// </summary>
        public static Output<GetSnapshotRepositoryResult> Invoke(GetSnapshotRepositoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotRepositoryResult>("elasticstack:index/getSnapshotRepository:getSnapshotRepository", args ?? new GetSnapshotRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotRepositoryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Elasticsearch connection configuration block.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Inputs.GetSnapshotRepositoryElasticsearchConnectionArgs? ElasticsearchConnection { get; set; }

        /// <summary>
        /// Name of the snapshot repository.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetSnapshotRepositoryArgs()
        {
        }
        public static new GetSnapshotRepositoryArgs Empty => new GetSnapshotRepositoryArgs();
    }

    public sealed class GetSnapshotRepositoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Elasticsearch connection configuration block.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Input<Inputs.GetSnapshotRepositoryElasticsearchConnectionInputArgs>? ElasticsearchConnection { get; set; }

        /// <summary>
        /// Name of the snapshot repository.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetSnapshotRepositoryInvokeArgs()
        {
        }
        public static new GetSnapshotRepositoryInvokeArgs Empty => new GetSnapshotRepositoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotRepositoryResult
    {
        /// <summary>
        /// Azure Blob storage as a repository. Set only if the type of the fetched repo is `azure`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotRepositoryAzureResult> Azures;
        /// <summary>
        /// Elasticsearch connection configuration block.
        /// </summary>
        public readonly Outputs.GetSnapshotRepositoryElasticsearchConnectionResult? ElasticsearchConnection;
        /// <summary>
        /// Shared filesystem repository. Set only if the type of the fetched repo is `fs`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotRepositoryFResult> Fs;
        /// <summary>
        /// Google Cloud Storage service as a repository. Set only if the type of the fetched repo is `gcs`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotRepositoryGcResult> Gcs;
        /// <summary>
        /// HDFS File System as a repository. Set only if the type of the fetched repo is `hdfs`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotRepositoryHdfResult> Hdfs;
        /// <summary>
        /// Internal identifier of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the snapshot repository.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// AWS S3 as a repository. Set only if the type of the fetched repo is `s3`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotRepositoryS3Result> S3s;
        /// <summary>
        /// Repository type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// URL repository. Set only if the type of the fetched repo is `url`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotRepositoryUrlResult> Urls;

        [OutputConstructor]
        private GetSnapshotRepositoryResult(
            ImmutableArray<Outputs.GetSnapshotRepositoryAzureResult> azures,

            Outputs.GetSnapshotRepositoryElasticsearchConnectionResult? elasticsearchConnection,

            ImmutableArray<Outputs.GetSnapshotRepositoryFResult> fs,

            ImmutableArray<Outputs.GetSnapshotRepositoryGcResult> gcs,

            ImmutableArray<Outputs.GetSnapshotRepositoryHdfResult> hdfs,

            string id,

            string name,

            ImmutableArray<Outputs.GetSnapshotRepositoryS3Result> s3s,

            string type,

            ImmutableArray<Outputs.GetSnapshotRepositoryUrlResult> urls)
        {
            Azures = azures;
            ElasticsearchConnection = elasticsearchConnection;
            Fs = fs;
            Gcs = gcs;
            Hdfs = hdfs;
            Id = id;
            Name = name;
            S3s = s3s;
            Type = type;
            Urls = urls;
        }
    }
}
