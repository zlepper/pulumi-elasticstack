// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Runs an inline or stored script on incoming documents. The script runs in the ingest context.
 *
 * The script processor uses the script cache to avoid recompiling the script for each incoming document. To improve performance, ensure the script cache is properly sized before using a script processor in production.
 *
 * See: https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html
 */
export function getIngestProcessorScript(args?: GetIngestProcessorScriptArgs, opts?: pulumi.InvokeOptions): Promise<GetIngestProcessorScriptResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getIngestProcessorScript:getIngestProcessorScript", {
        "description": args.description,
        "if": args.if,
        "ignoreFailure": args.ignoreFailure,
        "lang": args.lang,
        "onFailures": args.onFailures,
        "params": args.params,
        "scriptId": args.scriptId,
        "source": args.source,
        "tag": args.tag,
    }, opts);
}

/**
 * A collection of arguments for invoking getIngestProcessorScript.
 */
export interface GetIngestProcessorScriptArgs {
    /**
     * Description of the processor.
     */
    description?: string;
    /**
     * Conditionally execute the processor
     */
    if?: string;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: boolean;
    /**
     * Script language.
     */
    lang?: string;
    /**
     * Handle failures for the processor.
     */
    onFailures?: string[];
    /**
     * Object containing parameters for the script.
     */
    params?: string;
    /**
     * ID of a stored script. If no `source` is specified, this parameter is required.
     */
    scriptId?: string;
    /**
     * Inline script. If no id is specified, this parameter is required.
     */
    source?: string;
    /**
     * Identifier for the processor.
     */
    tag?: string;
}

/**
 * A collection of values returned by getIngestProcessorScript.
 */
export interface GetIngestProcessorScriptResult {
    /**
     * Description of the processor.
     */
    readonly description?: string;
    /**
     * Internal identifier of the resource.
     */
    readonly id: string;
    /**
     * Conditionally execute the processor
     */
    readonly if?: string;
    /**
     * Ignore failures for the processor.
     */
    readonly ignoreFailure?: boolean;
    /**
     * JSON representation of this data source.
     */
    readonly json: string;
    /**
     * Script language.
     */
    readonly lang?: string;
    /**
     * Handle failures for the processor.
     */
    readonly onFailures?: string[];
    /**
     * Object containing parameters for the script.
     */
    readonly params?: string;
    /**
     * ID of a stored script. If no `source` is specified, this parameter is required.
     */
    readonly scriptId?: string;
    /**
     * Inline script. If no id is specified, this parameter is required.
     */
    readonly source?: string;
    /**
     * Identifier for the processor.
     */
    readonly tag?: string;
}
/**
 * Runs an inline or stored script on incoming documents. The script runs in the ingest context.
 *
 * The script processor uses the script cache to avoid recompiling the script for each incoming document. To improve performance, ensure the script cache is properly sized before using a script processor in production.
 *
 * See: https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html
 */
export function getIngestProcessorScriptOutput(args?: GetIngestProcessorScriptOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIngestProcessorScriptResult> {
    return pulumi.output(args).apply((a: any) => getIngestProcessorScript(a, opts))
}

/**
 * A collection of arguments for invoking getIngestProcessorScript.
 */
export interface GetIngestProcessorScriptOutputArgs {
    /**
     * Description of the processor.
     */
    description?: pulumi.Input<string>;
    /**
     * Conditionally execute the processor
     */
    if?: pulumi.Input<string>;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: pulumi.Input<boolean>;
    /**
     * Script language.
     */
    lang?: pulumi.Input<string>;
    /**
     * Handle failures for the processor.
     */
    onFailures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Object containing parameters for the script.
     */
    params?: pulumi.Input<string>;
    /**
     * ID of a stored script. If no `source` is specified, this parameter is required.
     */
    scriptId?: pulumi.Input<string>;
    /**
     * Inline script. If no id is specified, this parameter is required.
     */
    source?: pulumi.Input<string>;
    /**
     * Identifier for the processor.
     */
    tag?: pulumi.Input<string>;
}
