// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This data source provides the information about the registered snaphosts repositories
 */
export function getSnapshotRepository(args: GetSnapshotRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getSnapshotRepository:getSnapshotRepository", {
        "elasticsearchConnection": args.elasticsearchConnection,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSnapshotRepository.
 */
export interface GetSnapshotRepositoryArgs {
    /**
     * Elasticsearch connection configuration block.
     */
    elasticsearchConnection?: inputs.GetSnapshotRepositoryElasticsearchConnection;
    /**
     * Name of the snapshot repository.
     */
    name: string;
}

/**
 * A collection of values returned by getSnapshotRepository.
 */
export interface GetSnapshotRepositoryResult {
    /**
     * Azure Blob storage as a repository. Set only if the type of the fetched repo is `azure`.
     */
    readonly azures: outputs.GetSnapshotRepositoryAzure[];
    /**
     * Elasticsearch connection configuration block.
     */
    readonly elasticsearchConnection?: outputs.GetSnapshotRepositoryElasticsearchConnection;
    /**
     * Shared filesystem repository. Set only if the type of the fetched repo is `fs`.
     */
    readonly fs: outputs.GetSnapshotRepositoryF[];
    /**
     * Google Cloud Storage service as a repository. Set only if the type of the fetched repo is `gcs`.
     */
    readonly gcs: outputs.GetSnapshotRepositoryGc[];
    /**
     * HDFS File System as a repository. Set only if the type of the fetched repo is `hdfs`.
     */
    readonly hdfs: outputs.GetSnapshotRepositoryHdf[];
    /**
     * Internal identifier of the resource
     */
    readonly id: string;
    /**
     * Name of the snapshot repository.
     */
    readonly name: string;
    /**
     * AWS S3 as a repository. Set only if the type of the fetched repo is `s3`.
     */
    readonly s3s: outputs.GetSnapshotRepositoryS3[];
    /**
     * Repository type.
     */
    readonly type: string;
    /**
     * URL repository. Set only if the type of the fetched repo is `url`.
     */
    readonly urls: outputs.GetSnapshotRepositoryUrl[];
}
/**
 * This data source provides the information about the registered snaphosts repositories
 */
export function getSnapshotRepositoryOutput(args: GetSnapshotRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getSnapshotRepository(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshotRepository.
 */
export interface GetSnapshotRepositoryOutputArgs {
    /**
     * Elasticsearch connection configuration block.
     */
    elasticsearchConnection?: pulumi.Input<inputs.GetSnapshotRepositoryElasticsearchConnectionArgs>;
    /**
     * Name of the snapshot repository.
     */
    name: pulumi.Input<string>;
}
