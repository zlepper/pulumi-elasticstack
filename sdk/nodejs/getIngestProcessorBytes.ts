// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Helper data source to which can be used to create a processor to convert a human readable byte value (e.g. 1kb) to its value in bytes (e.g. 1024). If the field is an array of strings, all members of the array will be converted.
 *
 * Supported human readable units are "b", "kb", "mb", "gb", "tb", "pb" case insensitive. An error will occur if the field is not a supported format or resultant value exceeds 2^63.
 *
 * See: https://www.elastic.co/guide/en/elasticsearch/reference/current/bytes-processor.html
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 *
 * const bytes = elasticstack.getIngestProcessorBytes({
 *     field: "file.size",
 * });
 * const myIngestPipeline = new elasticstack.IngestPipeline("myIngestPipeline", {processors: [bytes.then(bytes => bytes.json)]});
 * ```
 */
export function getIngestProcessorBytes(args: GetIngestProcessorBytesArgs, opts?: pulumi.InvokeOptions): Promise<GetIngestProcessorBytesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getIngestProcessorBytes:getIngestProcessorBytes", {
        "description": args.description,
        "field": args.field,
        "if": args.if,
        "ignoreFailure": args.ignoreFailure,
        "ignoreMissing": args.ignoreMissing,
        "onFailures": args.onFailures,
        "tag": args.tag,
        "targetField": args.targetField,
    }, opts);
}

/**
 * A collection of arguments for invoking getIngestProcessorBytes.
 */
export interface GetIngestProcessorBytesArgs {
    /**
     * Description of the processor.
     */
    description?: string;
    /**
     * The field to convert
     */
    field: string;
    /**
     * Conditionally execute the processor
     */
    if?: string;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: boolean;
    /**
     * If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
     */
    ignoreMissing?: boolean;
    /**
     * Handle failures for the processor.
     */
    onFailures?: string[];
    /**
     * Identifier for the processor.
     */
    tag?: string;
    /**
     * The field to assign the converted value to, by default `field` is updated in-place
     */
    targetField?: string;
}

/**
 * A collection of values returned by getIngestProcessorBytes.
 */
export interface GetIngestProcessorBytesResult {
    /**
     * Description of the processor.
     */
    readonly description?: string;
    /**
     * The field to convert
     */
    readonly field: string;
    /**
     * Internal identifier of the resource
     */
    readonly id: string;
    /**
     * Conditionally execute the processor
     */
    readonly if?: string;
    /**
     * Ignore failures for the processor.
     */
    readonly ignoreFailure?: boolean;
    /**
     * If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
     */
    readonly ignoreMissing?: boolean;
    /**
     * JSON representation of this data source.
     */
    readonly json: string;
    /**
     * Handle failures for the processor.
     */
    readonly onFailures?: string[];
    /**
     * Identifier for the processor.
     */
    readonly tag?: string;
    /**
     * The field to assign the converted value to, by default `field` is updated in-place
     */
    readonly targetField?: string;
}
/**
 * Helper data source to which can be used to create a processor to convert a human readable byte value (e.g. 1kb) to its value in bytes (e.g. 1024). If the field is an array of strings, all members of the array will be converted.
 *
 * Supported human readable units are "b", "kb", "mb", "gb", "tb", "pb" case insensitive. An error will occur if the field is not a supported format or resultant value exceeds 2^63.
 *
 * See: https://www.elastic.co/guide/en/elasticsearch/reference/current/bytes-processor.html
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 *
 * const bytes = elasticstack.getIngestProcessorBytes({
 *     field: "file.size",
 * });
 * const myIngestPipeline = new elasticstack.IngestPipeline("myIngestPipeline", {processors: [bytes.then(bytes => bytes.json)]});
 * ```
 */
export function getIngestProcessorBytesOutput(args: GetIngestProcessorBytesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIngestProcessorBytesResult> {
    return pulumi.output(args).apply((a: any) => getIngestProcessorBytes(a, opts))
}

/**
 * A collection of arguments for invoking getIngestProcessorBytes.
 */
export interface GetIngestProcessorBytesOutputArgs {
    /**
     * Description of the processor.
     */
    description?: pulumi.Input<string>;
    /**
     * The field to convert
     */
    field: pulumi.Input<string>;
    /**
     * Conditionally execute the processor
     */
    if?: pulumi.Input<string>;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: pulumi.Input<boolean>;
    /**
     * If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
     */
    ignoreMissing?: pulumi.Input<boolean>;
    /**
     * Handle failures for the processor.
     */
    onFailures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier for the processor.
     */
    tag?: pulumi.Input<string>;
    /**
     * The field to assign the converted value to, by default `field` is updated in-place
     */
    targetField?: pulumi.Input<string>;
}
