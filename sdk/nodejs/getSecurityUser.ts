// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get information about existing Elasticsearch user. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html".
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 *
 * const userSecurityUser = elasticstack.getSecurityUser({
 *     username: "elastic",
 * });
 * export const user = userSecurityUser;
 * ```
 */
export function getSecurityUser(args: GetSecurityUserArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getSecurityUser:getSecurityUser", {
        "elasticsearchConnection": args.elasticsearchConnection,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityUser.
 */
export interface GetSecurityUserArgs {
    /**
     * Elasticsearch connection configuration block.
     */
    elasticsearchConnection?: inputs.GetSecurityUserElasticsearchConnection;
    /**
     * An identifier for the user
     */
    username: string;
}

/**
 * A collection of values returned by getSecurityUser.
 */
export interface GetSecurityUserResult {
    /**
     * Elasticsearch connection configuration block.
     */
    readonly elasticsearchConnection?: outputs.GetSecurityUserElasticsearchConnection;
    /**
     * The email of the user.
     */
    readonly email: string;
    /**
     * Specifies whether the user is enabled. The default value is true.
     */
    readonly enabled: boolean;
    /**
     * The full name of the user.
     */
    readonly fullName: string;
    /**
     * Internal identifier of the resource
     */
    readonly id: string;
    /**
     * Arbitrary metadata that you want to associate with the user.
     */
    readonly metadata: string;
    /**
     * A set of roles the user has. The roles determine the userâ€™s access permissions. Default is [].
     */
    readonly roles: string[];
    /**
     * An identifier for the user
     */
    readonly username: string;
}
/**
 * Use this data source to get information about existing Elasticsearch user. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-user.html".
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 *
 * const userSecurityUser = elasticstack.getSecurityUser({
 *     username: "elastic",
 * });
 * export const user = userSecurityUser;
 * ```
 */
export function getSecurityUserOutput(args: GetSecurityUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityUserResult> {
    return pulumi.output(args).apply((a: any) => getSecurityUser(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityUser.
 */
export interface GetSecurityUserOutputArgs {
    /**
     * Elasticsearch connection configuration block.
     */
    elasticsearchConnection?: pulumi.Input<inputs.GetSecurityUserElasticsearchConnectionArgs>;
    /**
     * An identifier for the user
     */
    username: pulumi.Input<string>;
}
