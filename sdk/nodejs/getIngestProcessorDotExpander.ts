// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Expands a field with dots into an object field. This processor allows fields with dots in the name to be accessible by other processors in the pipeline. Otherwise these fields can’t be accessed by any processor.
 *
 * See: elastic.co/guide/en/elasticsearch/reference/current/dot-expand-processor.html
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 *
 * const dotExpander = elasticstack.getIngestProcessorDotExpander({
 *     field: "foo.bar",
 * });
 * const myIngestPipeline = new elasticstack.IngestPipeline("myIngestPipeline", {processors: [dotExpander.then(dotExpander => dotExpander.json)]});
 * ```
 */
export function getIngestProcessorDotExpander(args: GetIngestProcessorDotExpanderArgs, opts?: pulumi.InvokeOptions): Promise<GetIngestProcessorDotExpanderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getIngestProcessorDotExpander:getIngestProcessorDotExpander", {
        "description": args.description,
        "field": args.field,
        "if": args.if,
        "ignoreFailure": args.ignoreFailure,
        "onFailures": args.onFailures,
        "override": args.override,
        "path": args.path,
        "tag": args.tag,
    }, opts);
}

/**
 * A collection of arguments for invoking getIngestProcessorDotExpander.
 */
export interface GetIngestProcessorDotExpanderArgs {
    /**
     * Description of the processor.
     */
    description?: string;
    /**
     * The field to expand into an object field. If set to *, all top-level fields will be expanded.
     */
    field: string;
    /**
     * Conditionally execute the processor
     */
    if?: string;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: boolean;
    /**
     * Handle failures for the processor.
     */
    onFailures?: string[];
    /**
     * Controls the behavior when there is already an existing nested object that conflicts with the expanded field.
     */
    override?: boolean;
    /**
     * The field that contains the field to expand.
     */
    path?: string;
    /**
     * Identifier for the processor.
     */
    tag?: string;
}

/**
 * A collection of values returned by getIngestProcessorDotExpander.
 */
export interface GetIngestProcessorDotExpanderResult {
    /**
     * Description of the processor.
     */
    readonly description?: string;
    /**
     * The field to expand into an object field. If set to *, all top-level fields will be expanded.
     */
    readonly field: string;
    /**
     * Internal identifier of the resource
     */
    readonly id: string;
    /**
     * Conditionally execute the processor
     */
    readonly if?: string;
    /**
     * Ignore failures for the processor.
     */
    readonly ignoreFailure?: boolean;
    /**
     * JSON representation of this data source.
     */
    readonly json: string;
    /**
     * Handle failures for the processor.
     */
    readonly onFailures?: string[];
    /**
     * Controls the behavior when there is already an existing nested object that conflicts with the expanded field.
     */
    readonly override?: boolean;
    /**
     * The field that contains the field to expand.
     */
    readonly path?: string;
    /**
     * Identifier for the processor.
     */
    readonly tag?: string;
}
/**
 * Expands a field with dots into an object field. This processor allows fields with dots in the name to be accessible by other processors in the pipeline. Otherwise these fields can’t be accessed by any processor.
 *
 * See: elastic.co/guide/en/elasticsearch/reference/current/dot-expand-processor.html
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 *
 * const dotExpander = elasticstack.getIngestProcessorDotExpander({
 *     field: "foo.bar",
 * });
 * const myIngestPipeline = new elasticstack.IngestPipeline("myIngestPipeline", {processors: [dotExpander.then(dotExpander => dotExpander.json)]});
 * ```
 */
export function getIngestProcessorDotExpanderOutput(args: GetIngestProcessorDotExpanderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIngestProcessorDotExpanderResult> {
    return pulumi.output(args).apply((a: any) => getIngestProcessorDotExpander(a, opts))
}

/**
 * A collection of arguments for invoking getIngestProcessorDotExpander.
 */
export interface GetIngestProcessorDotExpanderOutputArgs {
    /**
     * Description of the processor.
     */
    description?: pulumi.Input<string>;
    /**
     * The field to expand into an object field. If set to *, all top-level fields will be expanded.
     */
    field: pulumi.Input<string>;
    /**
     * Conditionally execute the processor
     */
    if?: pulumi.Input<string>;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: pulumi.Input<boolean>;
    /**
     * Handle failures for the processor.
     */
    onFailures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Controls the behavior when there is already an existing nested object that conflicts with the expanded field.
     */
    override?: pulumi.Input<boolean>;
    /**
     * The field that contains the field to expand.
     */
    path?: pulumi.Input<string>;
    /**
     * Identifier for the processor.
     */
    tag?: pulumi.Input<string>;
}
