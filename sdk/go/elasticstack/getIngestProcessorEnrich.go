// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The enrich processor can enrich documents with data from another index. See enrich data section for more information about how to set this up.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest-enriching-data.html and https://www.elastic.co/guide/en/elasticsearch/reference/current/enrich-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/zlepper/pulumi-elasticstack/sdk/go/elasticstack"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		enrich, err := elasticstack.GetIngestProcessorEnrich(ctx, &elasticstack.GetIngestProcessorEnrichArgs{
// 			PolicyName:  "users-policy",
// 			Field:       "email",
// 			TargetField: "user",
// 			MaxMatches:  pulumi.IntRef(1),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewIngestPipeline(ctx, "myIngestPipeline", &elasticstack.IngestPipelineArgs{
// 			Processors: pulumi.StringArray{
// 				*pulumi.String(enrich.Json),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIngestProcessorEnrich(ctx *pulumi.Context, args *GetIngestProcessorEnrichArgs, opts ...pulumi.InvokeOption) (*GetIngestProcessorEnrichResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetIngestProcessorEnrichResult
	err := ctx.Invoke("elasticstack:index/getIngestProcessorEnrich:getIngestProcessorEnrich", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIngestProcessorEnrich.
type GetIngestProcessorEnrichArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field in the input document that matches the policies matchField used to retrieve the enrichment data.
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// The maximum number of matched documents to include under the configured target field.
	MaxMatches *int `pulumi:"maxMatches"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// If processor will update fields with pre-existing non-null-valued field.
	Override *bool `pulumi:"override"`
	// The name of the enrich policy to use.
	PolicyName string `pulumi:"policyName"`
	// A spatial relation operator used to match the geoshape of incoming documents to documents in the enrich index.
	ShapeRelation *string `pulumi:"shapeRelation"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// Field added to incoming documents to contain enrich data.
	TargetField string `pulumi:"targetField"`
}

// A collection of values returned by getIngestProcessorEnrich.
type GetIngestProcessorEnrichResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field in the input document that matches the policies matchField used to retrieve the enrichment data.
	Field string `pulumi:"field"`
	// Internal identifier of the resource
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// The maximum number of matched documents to include under the configured target field.
	MaxMatches *int `pulumi:"maxMatches"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// If processor will update fields with pre-existing non-null-valued field.
	Override *bool `pulumi:"override"`
	// The name of the enrich policy to use.
	PolicyName string `pulumi:"policyName"`
	// A spatial relation operator used to match the geoshape of incoming documents to documents in the enrich index.
	ShapeRelation *string `pulumi:"shapeRelation"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// Field added to incoming documents to contain enrich data.
	TargetField string `pulumi:"targetField"`
}

func GetIngestProcessorEnrichOutput(ctx *pulumi.Context, args GetIngestProcessorEnrichOutputArgs, opts ...pulumi.InvokeOption) GetIngestProcessorEnrichResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIngestProcessorEnrichResult, error) {
			args := v.(GetIngestProcessorEnrichArgs)
			r, err := GetIngestProcessorEnrich(ctx, &args, opts...)
			var s GetIngestProcessorEnrichResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIngestProcessorEnrichResultOutput)
}

// A collection of arguments for invoking getIngestProcessorEnrich.
type GetIngestProcessorEnrichOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The field in the input document that matches the policies matchField used to retrieve the enrichment data.
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing pulumi.BoolPtrInput `pulumi:"ignoreMissing"`
	// The maximum number of matched documents to include under the configured target field.
	MaxMatches pulumi.IntPtrInput `pulumi:"maxMatches"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// If processor will update fields with pre-existing non-null-valued field.
	Override pulumi.BoolPtrInput `pulumi:"override"`
	// The name of the enrich policy to use.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
	// A spatial relation operator used to match the geoshape of incoming documents to documents in the enrich index.
	ShapeRelation pulumi.StringPtrInput `pulumi:"shapeRelation"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Field added to incoming documents to contain enrich data.
	TargetField pulumi.StringInput `pulumi:"targetField"`
}

func (GetIngestProcessorEnrichOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIngestProcessorEnrichArgs)(nil)).Elem()
}

// A collection of values returned by getIngestProcessorEnrich.
type GetIngestProcessorEnrichResultOutput struct{ *pulumi.OutputState }

func (GetIngestProcessorEnrichResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIngestProcessorEnrichResult)(nil)).Elem()
}

func (o GetIngestProcessorEnrichResultOutput) ToGetIngestProcessorEnrichResultOutput() GetIngestProcessorEnrichResultOutput {
	return o
}

func (o GetIngestProcessorEnrichResultOutput) ToGetIngestProcessorEnrichResultOutputWithContext(ctx context.Context) GetIngestProcessorEnrichResultOutput {
	return o
}

// Description of the processor.
func (o GetIngestProcessorEnrichResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The field in the input document that matches the policies matchField used to retrieve the enrichment data.
func (o GetIngestProcessorEnrichResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource
func (o GetIngestProcessorEnrichResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o GetIngestProcessorEnrichResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o GetIngestProcessorEnrichResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
func (o GetIngestProcessorEnrichResultOutput) IgnoreMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *bool { return v.IgnoreMissing }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o GetIngestProcessorEnrichResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) string { return v.Json }).(pulumi.StringOutput)
}

// The maximum number of matched documents to include under the configured target field.
func (o GetIngestProcessorEnrichResultOutput) MaxMatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *int { return v.MaxMatches }).(pulumi.IntPtrOutput)
}

// Handle failures for the processor.
func (o GetIngestProcessorEnrichResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// If processor will update fields with pre-existing non-null-valued field.
func (o GetIngestProcessorEnrichResultOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *bool { return v.Override }).(pulumi.BoolPtrOutput)
}

// The name of the enrich policy to use.
func (o GetIngestProcessorEnrichResultOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) string { return v.PolicyName }).(pulumi.StringOutput)
}

// A spatial relation operator used to match the geoshape of incoming documents to documents in the enrich index.
func (o GetIngestProcessorEnrichResultOutput) ShapeRelation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *string { return v.ShapeRelation }).(pulumi.StringPtrOutput)
}

// Identifier for the processor.
func (o GetIngestProcessorEnrichResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Field added to incoming documents to contain enrich data.
func (o GetIngestProcessorEnrichResultOutput) TargetField() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorEnrichResult) string { return v.TargetField }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIngestProcessorEnrichResultOutput{})
}
