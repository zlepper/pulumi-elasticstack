// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Sorts the elements of an array ascending or descending. Homogeneous arrays of numbers will be sorted numerically, while arrays of strings or heterogeneous arrays of strings + numbers will be sorted lexicographically. Throws an error when the field is not an array.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/zlepper/pulumi-elasticstack/sdk/go/elasticstack"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		sort, err := elasticstack.GetIngestProcessorSort(ctx, &elasticstack.GetIngestProcessorSortArgs{
// 			Field: "array_field_to_sort",
// 			Order: pulumi.StringRef("desc"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewIngestPipeline(ctx, "myIngestPipeline", &elasticstack.IngestPipelineArgs{
// 			Processors: pulumi.StringArray{
// 				*pulumi.String(sort.Json),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIngestProcessorSort(ctx *pulumi.Context, args *GetIngestProcessorSortArgs, opts ...pulumi.InvokeOption) (*GetIngestProcessorSortResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetIngestProcessorSortResult
	err := ctx.Invoke("elasticstack:index/getIngestProcessorSort:getIngestProcessorSort", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIngestProcessorSort.
type GetIngestProcessorSortArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to be sorted
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// The sort order to use. Accepts `asc` or `desc`.
	Order *string `pulumi:"order"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field to assign the sorted value to, by default `field` is updated in-place
	TargetField *string `pulumi:"targetField"`
}

// A collection of values returned by getIngestProcessorSort.
type GetIngestProcessorSortResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to be sorted
	Field string `pulumi:"field"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// The sort order to use. Accepts `asc` or `desc`.
	Order *string `pulumi:"order"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field to assign the sorted value to, by default `field` is updated in-place
	TargetField *string `pulumi:"targetField"`
}

func GetIngestProcessorSortOutput(ctx *pulumi.Context, args GetIngestProcessorSortOutputArgs, opts ...pulumi.InvokeOption) GetIngestProcessorSortResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIngestProcessorSortResult, error) {
			args := v.(GetIngestProcessorSortArgs)
			r, err := GetIngestProcessorSort(ctx, &args, opts...)
			var s GetIngestProcessorSortResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIngestProcessorSortResultOutput)
}

// A collection of arguments for invoking getIngestProcessorSort.
type GetIngestProcessorSortOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The field to be sorted
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// The sort order to use. Accepts `asc` or `desc`.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The field to assign the sorted value to, by default `field` is updated in-place
	TargetField pulumi.StringPtrInput `pulumi:"targetField"`
}

func (GetIngestProcessorSortOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIngestProcessorSortArgs)(nil)).Elem()
}

// A collection of values returned by getIngestProcessorSort.
type GetIngestProcessorSortResultOutput struct{ *pulumi.OutputState }

func (GetIngestProcessorSortResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIngestProcessorSortResult)(nil)).Elem()
}

func (o GetIngestProcessorSortResultOutput) ToGetIngestProcessorSortResultOutput() GetIngestProcessorSortResultOutput {
	return o
}

func (o GetIngestProcessorSortResultOutput) ToGetIngestProcessorSortResultOutputWithContext(ctx context.Context) GetIngestProcessorSortResultOutput {
	return o
}

// Description of the processor.
func (o GetIngestProcessorSortResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The field to be sorted
func (o GetIngestProcessorSortResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource.
func (o GetIngestProcessorSortResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o GetIngestProcessorSortResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o GetIngestProcessorSortResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o GetIngestProcessorSortResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o GetIngestProcessorSortResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// The sort order to use. Accepts `asc` or `desc`.
func (o GetIngestProcessorSortResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// Identifier for the processor.
func (o GetIngestProcessorSortResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The field to assign the sorted value to, by default `field` is updated in-place
func (o GetIngestProcessorSortResultOutput) TargetField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorSortResult) *string { return v.TargetField }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIngestProcessorSortResultOutput{})
}
