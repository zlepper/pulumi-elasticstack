// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Elasticsearch struct {
	ApiKey    *string  `pulumi:"apiKey"`
	CaData    *string  `pulumi:"caData"`
	CaFile    *string  `pulumi:"caFile"`
	CertData  *string  `pulumi:"certData"`
	CertFile  *string  `pulumi:"certFile"`
	Endpoints []string `pulumi:"endpoints"`
	Insecure  *bool    `pulumi:"insecure"`
	KeyData   *string  `pulumi:"keyData"`
	KeyFile   *string  `pulumi:"keyFile"`
	Password  *string  `pulumi:"password"`
	Username  *string  `pulumi:"username"`
}

// ElasticsearchInput is an input type that accepts ElasticsearchArgs and ElasticsearchOutput values.
// You can construct a concrete instance of `ElasticsearchInput` via:
//
//          ElasticsearchArgs{...}
type ElasticsearchInput interface {
	pulumi.Input

	ToElasticsearchOutput() ElasticsearchOutput
	ToElasticsearchOutputWithContext(context.Context) ElasticsearchOutput
}

type ElasticsearchArgs struct {
	ApiKey    pulumi.StringPtrInput   `pulumi:"apiKey"`
	CaData    pulumi.StringPtrInput   `pulumi:"caData"`
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	CertData  pulumi.StringPtrInput   `pulumi:"certData"`
	CertFile  pulumi.StringPtrInput   `pulumi:"certFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	Insecure  pulumi.BoolPtrInput     `pulumi:"insecure"`
	KeyData   pulumi.StringPtrInput   `pulumi:"keyData"`
	KeyFile   pulumi.StringPtrInput   `pulumi:"keyFile"`
	Password  pulumi.StringPtrInput   `pulumi:"password"`
	Username  pulumi.StringPtrInput   `pulumi:"username"`
}

func (ElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Elasticsearch)(nil)).Elem()
}

func (i ElasticsearchArgs) ToElasticsearchOutput() ElasticsearchOutput {
	return i.ToElasticsearchOutputWithContext(context.Background())
}

func (i ElasticsearchArgs) ToElasticsearchOutputWithContext(ctx context.Context) ElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchOutput)
}

type ElasticsearchOutput struct{ *pulumi.OutputState }

func (ElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Elasticsearch)(nil)).Elem()
}

func (o ElasticsearchOutput) ToElasticsearchOutput() ElasticsearchOutput {
	return o
}

func (o ElasticsearchOutput) ToElasticsearchOutputWithContext(ctx context.Context) ElasticsearchOutput {
	return o
}

func (o ElasticsearchOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) CaData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.CaData }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) CertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.CertData }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) CertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.CertFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Elasticsearch) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

func (o ElasticsearchOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) KeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.KeyFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Elasticsearch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchInput)(nil)).Elem(), ElasticsearchArgs{})
	pulumi.RegisterOutputType(ElasticsearchOutput{})
}
