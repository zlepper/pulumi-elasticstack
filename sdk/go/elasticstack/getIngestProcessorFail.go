// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Raises an exception. This is useful for when you expect a pipeline to fail and want to relay a specific message to the requester.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/fail-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/zlepper/pulumi-elasticstack/sdk/go/elasticstack"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		fail, err := elasticstack.GetIngestProcessorFail(ctx, &elasticstack.GetIngestProcessorFailArgs{
// 			If:      pulumi.StringRef("ctx.tags.contains('production') != true"),
// 			Message: "The production tag is not present, found tags: {{{tags}}}",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewIngestPipeline(ctx, "myIngestPipeline", &elasticstack.IngestPipelineArgs{
// 			Processors: pulumi.StringArray{
// 				*pulumi.String(fail.Json),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetIngestProcessorFail(ctx *pulumi.Context, args *GetIngestProcessorFailArgs, opts ...pulumi.InvokeOption) (*GetIngestProcessorFailResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetIngestProcessorFailResult
	err := ctx.Invoke("elasticstack:index/getIngestProcessorFail:getIngestProcessorFail", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIngestProcessorFail.
type GetIngestProcessorFailArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// The error message thrown by the processor.
	Message string `pulumi:"message"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by getIngestProcessorFail.
type GetIngestProcessorFailResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Internal identifier of the resource
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// The error message thrown by the processor.
	Message string `pulumi:"message"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

func GetIngestProcessorFailOutput(ctx *pulumi.Context, args GetIngestProcessorFailOutputArgs, opts ...pulumi.InvokeOption) GetIngestProcessorFailResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIngestProcessorFailResult, error) {
			args := v.(GetIngestProcessorFailArgs)
			r, err := GetIngestProcessorFail(ctx, &args, opts...)
			var s GetIngestProcessorFailResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIngestProcessorFailResultOutput)
}

// A collection of arguments for invoking getIngestProcessorFail.
type GetIngestProcessorFailOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// The error message thrown by the processor.
	Message pulumi.StringInput `pulumi:"message"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetIngestProcessorFailOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIngestProcessorFailArgs)(nil)).Elem()
}

// A collection of values returned by getIngestProcessorFail.
type GetIngestProcessorFailResultOutput struct{ *pulumi.OutputState }

func (GetIngestProcessorFailResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIngestProcessorFailResult)(nil)).Elem()
}

func (o GetIngestProcessorFailResultOutput) ToGetIngestProcessorFailResultOutput() GetIngestProcessorFailResultOutput {
	return o
}

func (o GetIngestProcessorFailResultOutput) ToGetIngestProcessorFailResultOutputWithContext(ctx context.Context) GetIngestProcessorFailResultOutput {
	return o
}

// Description of the processor.
func (o GetIngestProcessorFailResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Internal identifier of the resource
func (o GetIngestProcessorFailResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o GetIngestProcessorFailResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o GetIngestProcessorFailResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o GetIngestProcessorFailResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) string { return v.Json }).(pulumi.StringOutput)
}

// The error message thrown by the processor.
func (o GetIngestProcessorFailResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) string { return v.Message }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o GetIngestProcessorFailResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Identifier for the processor.
func (o GetIngestProcessorFailResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIngestProcessorFailResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIngestProcessorFailResultOutput{})
}
