// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages data streams. This resource can create, delete and show the information about the created data stream. See: https://www.elastic.co/guide/en/elasticsearch/reference/current/data-stream-apis.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"encoding/json"
//
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/zlepper/pulumi-elasticstack/sdk/go/elasticstack"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		myIlm, err := elasticstack.NewIndexLifecycle(ctx, "myIlm", &elasticstack.IndexLifecycleArgs{
// 			Hot: &elasticstack.IndexLifecycleHotArgs{
// 				MinAge: pulumi.String("1h"),
// 				SetPriority: &elasticstack.IndexLifecycleHotSetPriorityArgs{
// 					Priority: pulumi.Int(10),
// 				},
// 				Rollover: &elasticstack.IndexLifecycleHotRolloverArgs{
// 					MaxAge: pulumi.String("1d"),
// 				},
// 				Readonly: nil,
// 			},
// 			Delete: &elasticstack.IndexLifecycleDeleteArgs{
// 				MinAge: pulumi.String("2d"),
// 				Delete: nil,
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		myDataStreamTemplate, err := elasticstack.NewIndexTemplate(ctx, "myDataStreamTemplate", &elasticstack.IndexTemplateArgs{
// 			IndexPatterns: pulumi.StringArray{
// 				pulumi.String("my-stream*"),
// 			},
// 			Template: &elasticstack.IndexTemplateTemplateArgs{
// 				Settings: myIlm.Name.ApplyT(func(name string) (pulumi.String, error) {
// 					var _zero pulumi.String
// 					tmpJSON0, err := json.Marshal(map[string]interface{}{
// 						"lifecycle.name": name,
// 					})
// 					if err != nil {
// 						return _zero, err
// 					}
// 					json0 := string(tmpJSON0)
// 					return pulumi.String(json0), nil
// 				}).(pulumi.StringOutput),
// 			},
// 			DataStream: nil,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewDataStream(ctx, "myDataStream", nil, pulumi.DependsOn([]pulumi.Resource{
// 			myDataStreamTemplate,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ```sh
//  $ pulumi import elasticstack:index/dataStream:DataStream my_data_stream <cluster_uuid>/<data_stream_name>
// ```
type DataStream struct {
	pulumi.CustomResourceState

	// Elasticsearch connection configuration block.
	ElasticsearchConnection DataStreamElasticsearchConnectionPtrOutput `pulumi:"elasticsearchConnection"`
	// Current generation for the data stream.
	Generation pulumi.IntOutput `pulumi:"generation"`
	// If `true`, the data stream is hidden.
	Hidden pulumi.BoolOutput `pulumi:"hidden"`
	// Name of the current ILM lifecycle policy in the stream’s matching index template.
	IlmPolicy pulumi.StringOutput `pulumi:"ilmPolicy"`
	// Array of objects containing information about the data stream’s backing indices. The last item in this array contains information about the stream’s current write index.
	Indices DataStreamIndexArrayOutput `pulumi:"indices"`
	// Custom metadata for the stream, copied from the _meta object of the stream’s matching index template.
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// Name of the data stream to create.
	Name pulumi.StringOutput `pulumi:"name"`
	// If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
	Replicated pulumi.BoolOutput `pulumi:"replicated"`
	// Health status of the data stream.
	Status pulumi.StringOutput `pulumi:"status"`
	// If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.
	System pulumi.BoolOutput `pulumi:"system"`
	// Name of the index template used to create the data stream’s backing indices.
	Template pulumi.StringOutput `pulumi:"template"`
	// Contains information about the data stream’s @timestamp field.
	TimestampField pulumi.StringOutput `pulumi:"timestampField"`
}

// NewDataStream registers a new resource with the given unique name, arguments, and options.
func NewDataStream(ctx *pulumi.Context,
	name string, args *DataStreamArgs, opts ...pulumi.ResourceOption) (*DataStream, error) {
	if args == nil {
		args = &DataStreamArgs{}
	}

	var resource DataStream
	err := ctx.RegisterResource("elasticstack:index/dataStream:DataStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataStream gets an existing DataStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataStreamState, opts ...pulumi.ResourceOption) (*DataStream, error) {
	var resource DataStream
	err := ctx.ReadResource("elasticstack:index/dataStream:DataStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataStream resources.
type dataStreamState struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *DataStreamElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Current generation for the data stream.
	Generation *int `pulumi:"generation"`
	// If `true`, the data stream is hidden.
	Hidden *bool `pulumi:"hidden"`
	// Name of the current ILM lifecycle policy in the stream’s matching index template.
	IlmPolicy *string `pulumi:"ilmPolicy"`
	// Array of objects containing information about the data stream’s backing indices. The last item in this array contains information about the stream’s current write index.
	Indices []DataStreamIndex `pulumi:"indices"`
	// Custom metadata for the stream, copied from the _meta object of the stream’s matching index template.
	Metadata *string `pulumi:"metadata"`
	// Name of the data stream to create.
	Name *string `pulumi:"name"`
	// If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
	Replicated *bool `pulumi:"replicated"`
	// Health status of the data stream.
	Status *string `pulumi:"status"`
	// If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.
	System *bool `pulumi:"system"`
	// Name of the index template used to create the data stream’s backing indices.
	Template *string `pulumi:"template"`
	// Contains information about the data stream’s @timestamp field.
	TimestampField *string `pulumi:"timestampField"`
}

type DataStreamState struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection DataStreamElasticsearchConnectionPtrInput
	// Current generation for the data stream.
	Generation pulumi.IntPtrInput
	// If `true`, the data stream is hidden.
	Hidden pulumi.BoolPtrInput
	// Name of the current ILM lifecycle policy in the stream’s matching index template.
	IlmPolicy pulumi.StringPtrInput
	// Array of objects containing information about the data stream’s backing indices. The last item in this array contains information about the stream’s current write index.
	Indices DataStreamIndexArrayInput
	// Custom metadata for the stream, copied from the _meta object of the stream’s matching index template.
	Metadata pulumi.StringPtrInput
	// Name of the data stream to create.
	Name pulumi.StringPtrInput
	// If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
	Replicated pulumi.BoolPtrInput
	// Health status of the data stream.
	Status pulumi.StringPtrInput
	// If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.
	System pulumi.BoolPtrInput
	// Name of the index template used to create the data stream’s backing indices.
	Template pulumi.StringPtrInput
	// Contains information about the data stream’s @timestamp field.
	TimestampField pulumi.StringPtrInput
}

func (DataStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataStreamState)(nil)).Elem()
}

type dataStreamArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *DataStreamElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Name of the data stream to create.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DataStream resource.
type DataStreamArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection DataStreamElasticsearchConnectionPtrInput
	// Name of the data stream to create.
	Name pulumi.StringPtrInput
}

func (DataStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataStreamArgs)(nil)).Elem()
}

type DataStreamInput interface {
	pulumi.Input

	ToDataStreamOutput() DataStreamOutput
	ToDataStreamOutputWithContext(ctx context.Context) DataStreamOutput
}

func (*DataStream) ElementType() reflect.Type {
	return reflect.TypeOf((**DataStream)(nil)).Elem()
}

func (i *DataStream) ToDataStreamOutput() DataStreamOutput {
	return i.ToDataStreamOutputWithContext(context.Background())
}

func (i *DataStream) ToDataStreamOutputWithContext(ctx context.Context) DataStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataStreamOutput)
}

// DataStreamArrayInput is an input type that accepts DataStreamArray and DataStreamArrayOutput values.
// You can construct a concrete instance of `DataStreamArrayInput` via:
//
//          DataStreamArray{ DataStreamArgs{...} }
type DataStreamArrayInput interface {
	pulumi.Input

	ToDataStreamArrayOutput() DataStreamArrayOutput
	ToDataStreamArrayOutputWithContext(context.Context) DataStreamArrayOutput
}

type DataStreamArray []DataStreamInput

func (DataStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataStream)(nil)).Elem()
}

func (i DataStreamArray) ToDataStreamArrayOutput() DataStreamArrayOutput {
	return i.ToDataStreamArrayOutputWithContext(context.Background())
}

func (i DataStreamArray) ToDataStreamArrayOutputWithContext(ctx context.Context) DataStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataStreamArrayOutput)
}

// DataStreamMapInput is an input type that accepts DataStreamMap and DataStreamMapOutput values.
// You can construct a concrete instance of `DataStreamMapInput` via:
//
//          DataStreamMap{ "key": DataStreamArgs{...} }
type DataStreamMapInput interface {
	pulumi.Input

	ToDataStreamMapOutput() DataStreamMapOutput
	ToDataStreamMapOutputWithContext(context.Context) DataStreamMapOutput
}

type DataStreamMap map[string]DataStreamInput

func (DataStreamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataStream)(nil)).Elem()
}

func (i DataStreamMap) ToDataStreamMapOutput() DataStreamMapOutput {
	return i.ToDataStreamMapOutputWithContext(context.Background())
}

func (i DataStreamMap) ToDataStreamMapOutputWithContext(ctx context.Context) DataStreamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataStreamMapOutput)
}

type DataStreamOutput struct{ *pulumi.OutputState }

func (DataStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataStream)(nil)).Elem()
}

func (o DataStreamOutput) ToDataStreamOutput() DataStreamOutput {
	return o
}

func (o DataStreamOutput) ToDataStreamOutputWithContext(ctx context.Context) DataStreamOutput {
	return o
}

// Elasticsearch connection configuration block.
func (o DataStreamOutput) ElasticsearchConnection() DataStreamElasticsearchConnectionPtrOutput {
	return o.ApplyT(func(v *DataStream) DataStreamElasticsearchConnectionPtrOutput { return v.ElasticsearchConnection }).(DataStreamElasticsearchConnectionPtrOutput)
}

// Current generation for the data stream.
func (o DataStreamOutput) Generation() pulumi.IntOutput {
	return o.ApplyT(func(v *DataStream) pulumi.IntOutput { return v.Generation }).(pulumi.IntOutput)
}

// If `true`, the data stream is hidden.
func (o DataStreamOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v *DataStream) pulumi.BoolOutput { return v.Hidden }).(pulumi.BoolOutput)
}

// Name of the current ILM lifecycle policy in the stream’s matching index template.
func (o DataStreamOutput) IlmPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *DataStream) pulumi.StringOutput { return v.IlmPolicy }).(pulumi.StringOutput)
}

// Array of objects containing information about the data stream’s backing indices. The last item in this array contains information about the stream’s current write index.
func (o DataStreamOutput) Indices() DataStreamIndexArrayOutput {
	return o.ApplyT(func(v *DataStream) DataStreamIndexArrayOutput { return v.Indices }).(DataStreamIndexArrayOutput)
}

// Custom metadata for the stream, copied from the _meta object of the stream’s matching index template.
func (o DataStreamOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v *DataStream) pulumi.StringOutput { return v.Metadata }).(pulumi.StringOutput)
}

// Name of the data stream to create.
func (o DataStreamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataStream) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
func (o DataStreamOutput) Replicated() pulumi.BoolOutput {
	return o.ApplyT(func(v *DataStream) pulumi.BoolOutput { return v.Replicated }).(pulumi.BoolOutput)
}

// Health status of the data stream.
func (o DataStreamOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DataStream) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.
func (o DataStreamOutput) System() pulumi.BoolOutput {
	return o.ApplyT(func(v *DataStream) pulumi.BoolOutput { return v.System }).(pulumi.BoolOutput)
}

// Name of the index template used to create the data stream’s backing indices.
func (o DataStreamOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v *DataStream) pulumi.StringOutput { return v.Template }).(pulumi.StringOutput)
}

// Contains information about the data stream’s @timestamp field.
func (o DataStreamOutput) TimestampField() pulumi.StringOutput {
	return o.ApplyT(func(v *DataStream) pulumi.StringOutput { return v.TimestampField }).(pulumi.StringOutput)
}

type DataStreamArrayOutput struct{ *pulumi.OutputState }

func (DataStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataStream)(nil)).Elem()
}

func (o DataStreamArrayOutput) ToDataStreamArrayOutput() DataStreamArrayOutput {
	return o
}

func (o DataStreamArrayOutput) ToDataStreamArrayOutputWithContext(ctx context.Context) DataStreamArrayOutput {
	return o
}

func (o DataStreamArrayOutput) Index(i pulumi.IntInput) DataStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataStream {
		return vs[0].([]*DataStream)[vs[1].(int)]
	}).(DataStreamOutput)
}

type DataStreamMapOutput struct{ *pulumi.OutputState }

func (DataStreamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataStream)(nil)).Elem()
}

func (o DataStreamMapOutput) ToDataStreamMapOutput() DataStreamMapOutput {
	return o
}

func (o DataStreamMapOutput) ToDataStreamMapOutputWithContext(ctx context.Context) DataStreamMapOutput {
	return o
}

func (o DataStreamMapOutput) MapIndex(k pulumi.StringInput) DataStreamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataStream {
		return vs[0].(map[string]*DataStream)[vs[1].(string)]
	}).(DataStreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataStreamInput)(nil)).Elem(), &DataStream{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataStreamArrayInput)(nil)).Elem(), DataStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataStreamMapInput)(nil)).Elem(), DataStreamMap{})
	pulumi.RegisterOutputType(DataStreamOutput{})
	pulumi.RegisterOutputType(DataStreamArrayOutput{})
	pulumi.RegisterOutputType(DataStreamMapOutput{})
}
